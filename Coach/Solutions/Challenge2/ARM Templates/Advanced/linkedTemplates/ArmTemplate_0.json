{
    "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "factoryName": {
            "type": "string",
            "metadata": "Data Factory name",
            "defaultValue": "mdwhack-advanced"
        },
        "WideWorldImporters_connectionString": {
            "type": "secureString",
            "metadata": "Secure string for 'connectionString' of 'WideWorldImporters'"
        },
        "AzureSynapseAnalytics_connectionString": {
            "type": "secureString",
            "metadata": "Secure string for 'connectionString' of 'AzureSynapseAnalytics'"
        },
        "ADLS_accountKey": {
            "type": "secureString",
            "metadata": "Secure string for 'accountKey' of 'ADLS'"
        },
        "ADLS_properties_typeProperties_url": {
            "type": "string",
            "defaultValue": "https://mdwhackadvanced.dfs.core.windows.net"
        }
    },
    "variables": {
        "factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
    },
    "resources": [
        {
            "name": "[concat(parameters('factoryName'), '/WideWorldImporters')]",
            "type": "Microsoft.DataFactory/factories/linkedServices",
            "apiVersion": "2018-06-01",
            "properties": {
                "annotations": [],
                "type": "SqlServer",
                "typeProperties": {
                    "connectionString": "[parameters('WideWorldImporters_connectionString')]"
                }
            },
            "dependsOn": []
        },
        {
            "name": "[concat(parameters('factoryName'), '/AzureSynapseAnalytics')]",
            "type": "Microsoft.DataFactory/factories/linkedServices",
            "apiVersion": "2018-06-01",
            "properties": {
                "annotations": [],
                "type": "AzureSqlDW",
                "typeProperties": {
                    "connectionString": "[parameters('AzureSynapseAnalytics_connectionString')]"
                }
            },
            "dependsOn": []
        },
        {
            "name": "[concat(parameters('factoryName'), '/ADLS')]",
            "type": "Microsoft.DataFactory/factories/linkedServices",
            "apiVersion": "2018-06-01",
            "properties": {
                "annotations": [],
                "type": "AzureBlobFS",
                "typeProperties": {
                    "url": "[parameters('ADLS_properties_typeProperties_url')]",
                    "accountKey": {
                        "type": "SecureString",
                        "value": "[parameters('ADLS_accountKey')]"
                    }
                }
            },
            "dependsOn": []
        },
        {
            "name": "[concat(parameters('factoryName'), '/WideWorldImporters')]",
            "type": "Microsoft.DataFactory/factories/datasets",
            "apiVersion": "2018-06-01",
            "properties": {
                "linkedServiceName": {
                    "referenceName": "WideWorldImporters",
                    "type": "LinkedServiceReference"
                },
                "annotations": [],
                "type": "SqlServerTable",
                "schema": [],
                "typeProperties": {}
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/WideWorldImporters')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/WideWorldImportersDW')]",
            "type": "Microsoft.DataFactory/factories/datasets",
            "apiVersion": "2018-06-01",
            "properties": {
                "linkedServiceName": {
                    "referenceName": "AzureSynapseAnalytics",
                    "type": "LinkedServiceReference"
                },
                "annotations": [],
                "type": "AzureSqlDWTable",
                "schema": [],
                "typeProperties": {}
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/AzureSynapseAnalytics')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/ADLS')]",
            "type": "Microsoft.DataFactory/factories/datasets",
            "apiVersion": "2018-06-01",
            "properties": {
                "linkedServiceName": {
                    "referenceName": "ADLS",
                    "type": "LinkedServiceReference"
                },
                "parameters": {
                    "TableName": {
                        "type": "string"
                    }
                },
                "annotations": [],
                "type": "DelimitedText",
                "typeProperties": {
                    "location": {
                        "type": "AzureBlobFSLocation",
                        "fileName": {
                            "value": "@concat(replace(dataset().TableName, ' ', ''), '.txt')",
                            "type": "Expression"
                        },
                        "folderPath": {
                            "value": "@concat('IN/WWIDB/',dataset().TableName)",
                            "type": "Expression"
                        },
                        "fileSystem": "mdwhack"
                    },
                    "columnDelimiter": "|",
                    "escapeChar": "\\",
                    "quoteChar": ""
                },
                "schema": []
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/ADLS')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/ExtractData')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "activities": [
                    {
                        "name": "CopyData",
                        "type": "Copy",
                        "dependsOn": [
                            {
                                "activity": "LookupStartDate",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            },
                            {
                                "activity": "LookupEndDate",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "SqlServerSource",
                                "sqlReaderStoredProcedureName": {
                                    "value": "@concat('Integration.[Get', replace(pipeline().parameters.TableName, ' ', ''), 'Updates]')",
                                    "type": "Expression"
                                },
                                "storedProcedureParameters": {
                                    "LastCutoff": {
                                        "type": "String",
                                        "value": {
                                            "value": "@activity('LookupStartDate').output.firstRow.CutoffTime",
                                            "type": "Expression"
                                        }
                                    },
                                    "NewCutoff": {
                                        "type": "String",
                                        "value": {
                                            "value": "@activity('LookupEndDate').output.firstRow.Load_Date",
                                            "type": "Expression"
                                        }
                                    }
                                },
                                "queryTimeout": "02:00:00"
                            },
                            "sink": {
                                "type": "DelimitedTextSink",
                                "storeSettings": {
                                    "type": "AzureBlobFSWriteSettings"
                                },
                                "formatSettings": {
                                    "type": "DelimitedTextWriteSettings",
                                    "quoteAllText": true,
                                    "fileExtension": ".txt"
                                }
                            },
                            "enableStaging": false
                        },
                        "inputs": [
                            {
                                "referenceName": "WideWorldImporters",
                                "type": "DatasetReference",
                                "parameters": {}
                            }
                        ],
                        "outputs": [
                            {
                                "referenceName": "ADLS",
                                "type": "DatasetReference",
                                "parameters": {
                                    "TableName": {
                                        "value": "@pipeline().parameters.TableName",
                                        "type": "Expression"
                                    }
                                }
                            }
                        ]
                    },
                    {
                        "name": "LookupStartDate",
                        "type": "Lookup",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "SqlDWSource",
                                "sqlReaderQuery": {
                                    "value": "@concat('select [Cutoff Time] as CutoffTime\nfrom Integration.[ETL Cutoff]\nWHERE [Table Name] = ''', pipeline().parameters.TableName, '''')",
                                    "type": "Expression"
                                },
                                "queryTimeout": "02:00:00"
                            },
                            "dataset": {
                                "referenceName": "WideWorldImportersDW",
                                "type": "DatasetReference",
                                "parameters": {}
                            }
                        }
                    },
                    {
                        "name": "LookupEndDate",
                        "type": "Lookup",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "SqlDWSource",
                                "sqlReaderQuery": "select Load_Date \nfrom integration.[load_control]",
                                "queryTimeout": "02:00:00"
                            },
                            "dataset": {
                                "referenceName": "WideWorldImportersDW",
                                "type": "DatasetReference",
                                "parameters": {}
                            }
                        }
                    }
                ],
                "parameters": {
                    "TableName": {
                        "type": "string",
                        "defaultValue": "City"
                    }
                },
                "variables": {
                    "test": {
                        "type": "String"
                    }
                },
                "annotations": []
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/datasets/WideWorldImporters')]",
                "[concat(variables('factoryId'), '/datasets/ADLS')]",
                "[concat(variables('factoryId'), '/datasets/WideWorldImportersDW')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/ForEachTable')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "activities": [
                    {
                        "name": "ForEachTable",
                        "type": "ForEach",
                        "dependsOn": [
                            {
                                "activity": "GetTableList",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "items": {
                                "value": "@activity('GetTableList').output.value",
                                "type": "Expression"
                            },
                            "isSequential": true,
                            "activities": [
                                {
                                    "name": "Execute Extract Data Pipeline",
                                    "type": "ExecutePipeline",
                                    "dependsOn": [],
                                    "userProperties": [],
                                    "typeProperties": {
                                        "pipeline": {
                                            "referenceName": "ExtractData",
                                            "type": "PipelineReference"
                                        },
                                        "waitOnCompletion": true,
                                        "parameters": {
                                            "TableName": {
                                                "value": "@item().TableName",
                                                "type": "Expression"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "name": "GetTableList",
                        "type": "Lookup",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "SqlDWSource",
                                "sqlReaderQuery": "Select [Table Name] as TableName\nFrom Integration.[ETL Cutoff]\nWhere [Table Name] not in ('Date', 'Stock Holding')",
                                "queryTimeout": "02:00:00"
                            },
                            "dataset": {
                                "referenceName": "WideWorldImportersDW",
                                "type": "DatasetReference",
                                "parameters": {}
                            },
                            "firstRowOnly": false
                        }
                    }
                ],
                "annotations": []
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/datasets/WideWorldImportersDW')]",
                "[concat(variables('factoryId'), '/pipelines/ExtractData')]"
            ]
        }
    ]
}